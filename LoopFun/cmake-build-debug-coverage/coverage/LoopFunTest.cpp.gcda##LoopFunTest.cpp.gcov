        -:    0:Source:C:/Users/lavab/CLionProjects/LoopFun/LoopFunTest.cpp
        -:    0:Graph:C:\Users\lavab\CLionProjects\LoopFun\cmake-build-debug-coverage\CMakeFiles\LoopFun.dir\LoopFunTest.cpp.gcno
        -:    0:Data:C:\Users\lavab\CLionProjects\LoopFun\cmake-build-debug-coverage\CMakeFiles\LoopFun.dir\LoopFunTest.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Richard H. Mercer on 6-Sep-2022.
        -:    3:// Author: Andrew Tapia
        -:    4:// This tells Catch to provide a main() - only do this in one cpp file
        -:    5:
        -:    6:#define CATCH_CONFIG_MAIN
        -:    7:
        -:    8:#include "catch.hpp"
        -:    9:#include "LoopFun.hpp"
        -:   10:
function _ZL19C_A_T_C_H_T_E_S_T_0v called 1 returned 100% blocks executed 39%
        1:   11:TEST_CASE ("fibonnacci") {
        1:   12:    REQUIRE(21 == fibonacci(8));
        1:   12-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   12-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   12-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   12-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   12-block  4
call   16 returned 1
        1:   12-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   12-block  6
call   20 returned 1
    $$$$$:   12-block  7
    $$$$$:   12-block  8
    $$$$$:   12-block  9
    $$$$$:   12-block 10
call   21 never executed
    $$$$$:   12-block 11
    $$$$$:   12-block 12
    $$$$$:   12-block 13
    $$$$$:   12-block 14
    $$$$$:   12-block 15
    $$$$$:   12-block 16
    $$$$$:   12-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   12-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   12-block 19
call   29 never executed
    $$$$$:   12-block 20
call   30 never executed
        1:   13:    REQUIRE(3524578 == fibonacci(33));
        1:   13-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   13-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   13-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   13-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   13-block  4
call   16 returned 1
        1:   13-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   13-block  6
call   20 returned 1
    $$$$$:   13-block  7
    $$$$$:   13-block  8
    $$$$$:   13-block  9
    $$$$$:   13-block 10
call   21 never executed
    $$$$$:   13-block 11
    $$$$$:   13-block 12
    $$$$$:   13-block 13
    $$$$$:   13-block 14
    $$$$$:   13-block 15
    $$$$$:   13-block 16
    $$$$$:   13-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   13-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   13-block 19
call   29 never executed
    $$$$$:   13-block 20
call   30 never executed
        1:   14:}
        1:   14-block  0
        -:   15:
function _ZL19C_A_T_C_H_T_E_S_T_2v called 1 returned 100% blocks executed 39%
        1:   16:TEST_CASE ("factorial") {
        1:   17:    REQUIRE(1 == factorial(0));
        1:   17-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   17-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   17-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   17-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   17-block  4
call   16 returned 1
        1:   17-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   17-block  6
call   20 returned 1
    $$$$$:   17-block  7
    $$$$$:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
call   21 never executed
    $$$$$:   17-block 11
    $$$$$:   17-block 12
    $$$$$:   17-block 13
    $$$$$:   17-block 14
    $$$$$:   17-block 15
    $$$$$:   17-block 16
    $$$$$:   17-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   17-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   17-block 19
call   29 never executed
    $$$$$:   17-block 20
call   30 never executed
        1:   18:    REQUIRE(120 == factorial(5));
        1:   18-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   18-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   18-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   18-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   18-block  4
call   16 returned 1
        1:   18-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   18-block  6
call   20 returned 1
    $$$$$:   18-block  7
    $$$$$:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
call   21 never executed
    $$$$$:   18-block 11
    $$$$$:   18-block 12
    $$$$$:   18-block 13
    $$$$$:   18-block 14
    $$$$$:   18-block 15
    $$$$$:   18-block 16
    $$$$$:   18-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   18-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   18-block 19
call   29 never executed
    $$$$$:   18-block 20
call   30 never executed
        1:   19:}
        1:   19-block  0
        -:   20:
function _ZL19C_A_T_C_H_T_E_S_T_4v called 1 returned 100% blocks executed 41%
        1:   21:TEST_CASE ("vowelCount") {
        1:   22:    REQUIRE(10 == vowelCount("a e i o u A E I O U"));
        1:   22-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   22-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   22-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   22-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   22-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   22-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   22-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:   22-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   22-block  8
call   28 returned 1
    $$$$$:   22-block  9
    $$$$$:   22-block 10
    $$$$$:   22-block 11
    $$$$$:   22-block 12
call   29 never executed
    $$$$$:   22-block 13
    $$$$$:   22-block 14
    $$$$$:   22-block 15
    $$$$$:   22-block 16
    $$$$$:   22-block 17
    $$$$$:   22-block 18
call   30 never executed
    $$$$$:   22-block 19
    $$$$$:   22-block 20
call   31 never executed
    $$$$$:   22-block 21
    $$$$$:   22-block 22
    $$$$$:   22-block 23
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:   22-block 24
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   22-block 25
call   39 never executed
    $$$$$:   22-block 26
call   40 never executed
        1:   23:}
        1:   23-block  0
        -:   24:
function _ZL19C_A_T_C_H_T_E_S_T_6v called 1 returned 100% blocks executed 42%
        1:   25:TEST_CASE("isPrime") {
        1:   26:    REQUIRE_FALSE(isPrime(4));
        1:   26-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   26-block  1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   26-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   26-block  3
        1:   26-block  4
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   26-block  5
call   17 returned 1
    $$$$$:   26-block  6
    $$$$$:   26-block  7
    $$$$$:   26-block  8
    $$$$$:   26-block  9
    $$$$$:   26-block 10
    $$$$$:   26-block 11
    $$$$$:   26-block 12
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
    $$$$$:   26-block 13
call   22 never executed
branch 23 never executed
branch 24 never executed
    $$$$$:   26-block 14
call   25 never executed
    $$$$$:   26-block 15
call   26 never executed
        1:   27:    REQUIRE_FALSE(isPrime(8));
        1:   27-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   27-block  1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   27-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   27-block  3
        1:   27-block  4
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   27-block  5
call   17 returned 1
    $$$$$:   27-block  6
    $$$$$:   27-block  7
    $$$$$:   27-block  8
    $$$$$:   27-block  9
    $$$$$:   27-block 10
    $$$$$:   27-block 11
    $$$$$:   27-block 12
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
    $$$$$:   27-block 13
call   22 never executed
branch 23 never executed
branch 24 never executed
    $$$$$:   27-block 14
call   25 never executed
    $$$$$:   27-block 15
call   26 never executed
        1:   28:    REQUIRE(isPrime(5));
        1:   28-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   28-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   28-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   28-block  3
        1:   28-block  4
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   28-block  5
call   16 returned 1
    $$$$$:   28-block  6
    $$$$$:   28-block  7
    $$$$$:   28-block  8
    $$$$$:   28-block  9
    $$$$$:   28-block 10
    $$$$$:   28-block 11
    $$$$$:   28-block 12
call   17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
    $$$$$:   28-block 13
call   21 never executed
branch 22 never executed
branch 23 never executed
    $$$$$:   28-block 14
call   24 never executed
    $$$$$:   28-block 15
call   25 never executed
        1:   29:    REQUIRE(isPrime(7));
        1:   29-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   29-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   29-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   29-block  3
        1:   29-block  4
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   29-block  5
call   16 returned 1
    $$$$$:   29-block  6
    $$$$$:   29-block  7
    $$$$$:   29-block  8
    $$$$$:   29-block  9
    $$$$$:   29-block 10
    $$$$$:   29-block 11
    $$$$$:   29-block 12
call   17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
    $$$$$:   29-block 13
call   21 never executed
branch 22 never executed
branch 23 never executed
    $$$$$:   29-block 14
call   24 never executed
    $$$$$:   29-block 15
call   25 never executed
        1:   30:}
        1:   30-block  0
        -:   31:
function _ZL19C_A_T_C_H_T_E_S_T_8v called 1 returned 100% blocks executed 40%
        1:   32:TEST_CASE ("numberOfPairs") {
        1:   33:    REQUIRE(2 == numberOfPairs("abbba"));
        1:   33-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   33-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   33-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   33-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   33-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   33-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   33-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:   33-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   33-block  8
call   28 returned 1
    $$$$$:   33-block  9
    $$$$$:   33-block 10
    $$$$$:   33-block 11
    $$$$$:   33-block 12
call   29 never executed
    $$$$$:   33-block 13
    $$$$$:   33-block 14
    $$$$$:   33-block 15
    $$$$$:   33-block 16
    $$$$$:   33-block 17
    $$$$$:   33-block 18
call   30 never executed
    $$$$$:   33-block 19
    $$$$$:   33-block 20
call   31 never executed
    $$$$$:   33-block 21
    $$$$$:   33-block 22
    $$$$$:   33-block 23
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:   33-block 24
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   33-block 25
call   39 never executed
    $$$$$:   33-block 26
call   40 never executed
        1:   34:    REQUIRE(0 == numberOfPairs("abBba"));
        1:   34-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   34-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   34-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   34-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   34-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   34-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   34-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:   34-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   34-block  8
call   28 returned 1
    $$$$$:   34-block  9
    $$$$$:   34-block 10
    $$$$$:   34-block 11
    $$$$$:   34-block 12
call   29 never executed
    $$$$$:   34-block 13
    $$$$$:   34-block 14
    $$$$$:   34-block 15
    $$$$$:   34-block 16
    $$$$$:   34-block 17
    $$$$$:   34-block 18
call   30 never executed
    $$$$$:   34-block 19
    $$$$$:   34-block 20
call   31 never executed
    $$$$$:   34-block 21
    $$$$$:   34-block 22
    $$$$$:   34-block 23
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:   34-block 24
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   34-block 25
call   39 never executed
    $$$$$:   34-block 26
call   40 never executed
        1:   35:}
        1:   35-block  0
        -:   36:
function _ZL20C_A_T_C_H_T_E_S_T_10v called 1 returned 100% blocks executed 42%
        1:   37:TEST_CASE("isSorted") {
        -:   38:    // Cast str.length() to an int with this
        -:   39:    // static_cast<int>(str.length())
        1:   40:    REQUIRE(isSorted("abbcddef"));
        1:   40-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   40-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   40-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   40-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   40-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   40-block  5
call   19 returned 1
call   20 returned 1
        1:   40-block  6
call   21 returned 1
branch 22 taken 1 (fallthrough)
branch 23 taken 0 (throw)
        1:   40-block  7
call   24 returned 1
    $$$$$:   40-block  8
    $$$$$:   40-block  9
    $$$$$:   40-block 10
    $$$$$:   40-block 11
    $$$$$:   40-block 12
    $$$$$:   40-block 13
call   25 never executed
    $$$$$:   40-block 14
    $$$$$:   40-block 15
call   26 never executed
    $$$$$:   40-block 16
    $$$$$:   40-block 17
    $$$$$:   40-block 18
call   27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:   40-block 19
call   31 never executed
branch 32 never executed
branch 33 never executed
    $$$$$:   40-block 20
call   34 never executed
    $$$$$:   40-block 21
call   35 never executed
        1:   41:    REQUIRE_FALSE(isSorted("BA"));
        1:   41-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   41-block  1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   41-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   41-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   41-block  4
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   41-block  5
call   20 returned 1
call   21 returned 1
        1:   41-block  6
call   22 returned 1
branch 23 taken 1 (fallthrough)
branch 24 taken 0 (throw)
        1:   41-block  7
call   25 returned 1
    $$$$$:   41-block  8
    $$$$$:   41-block  9
    $$$$$:   41-block 10
    $$$$$:   41-block 11
    $$$$$:   41-block 12
    $$$$$:   41-block 13
call   26 never executed
    $$$$$:   41-block 14
    $$$$$:   41-block 15
call   27 never executed
    $$$$$:   41-block 16
    $$$$$:   41-block 17
    $$$$$:   41-block 18
call   28 never executed
call   29 never executed
branch 30 never executed
branch 31 never executed
    $$$$$:   41-block 19
call   32 never executed
branch 33 never executed
branch 34 never executed
    $$$$$:   41-block 20
call   35 never executed
    $$$$$:   41-block 21
call   36 never executed
        1:   42:}
        1:   42-block  0
        -:   43:
function _ZL20C_A_T_C_H_T_E_S_T_12v called 1 returned 100% blocks executed 40%
        1:   44:TEST_CASE ("howSwedish") {
        1:   45:    REQUIRE(0 == howSwedish("aBBbba"));
        1:   45-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   45-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   45-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   45-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   45-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   45-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   45-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:   45-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   45-block  8
call   28 returned 1
    $$$$$:   45-block  9
    $$$$$:   45-block 10
    $$$$$:   45-block 11
    $$$$$:   45-block 12
call   29 never executed
    $$$$$:   45-block 13
    $$$$$:   45-block 14
    $$$$$:   45-block 15
    $$$$$:   45-block 16
    $$$$$:   45-block 17
    $$$$$:   45-block 18
call   30 never executed
    $$$$$:   45-block 19
    $$$$$:   45-block 20
call   31 never executed
    $$$$$:   45-block 21
    $$$$$:   45-block 22
    $$$$$:   45-block 23
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:   45-block 24
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   45-block 25
call   39 never executed
    $$$$$:   45-block 26
call   40 never executed
        1:   46:    REQUIRE(1 == howSwedish("aBBaAbbXa"));
        1:   46-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   46-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   46-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   46-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   46-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   46-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   46-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
        1:   46-block  7
call   25 returned 1
branch 26 taken 1 (fallthrough)
branch 27 taken 0 (throw)
        1:   46-block  8
call   28 returned 1
    $$$$$:   46-block  9
    $$$$$:   46-block 10
    $$$$$:   46-block 11
    $$$$$:   46-block 12
call   29 never executed
    $$$$$:   46-block 13
    $$$$$:   46-block 14
    $$$$$:   46-block 15
    $$$$$:   46-block 16
    $$$$$:   46-block 17
    $$$$$:   46-block 18
call   30 never executed
    $$$$$:   46-block 19
    $$$$$:   46-block 20
call   31 never executed
    $$$$$:   46-block 21
    $$$$$:   46-block 22
    $$$$$:   46-block 23
call   32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
    $$$$$:   46-block 24
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   46-block 25
call   39 never executed
    $$$$$:   46-block 26
call   40 never executed
        1:   47:}
        1:   47-block  0
        -:   48:
        -:   49:
function _ZL20C_A_T_C_H_T_E_S_T_14v called 1 returned 100% blocks executed 42%
        1:   50:TEST_CASE ("allAsLeft") {
        1:   51:    REQUIRE("AAAaaa" == allAsLeft("aaaAAA"));
        1:   51-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   51-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   51-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   51-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   51-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   51-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   51-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
        1:   51-block  7
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:   51-block  8
call   29 returned 1
    $$$$$:   51-block  9
    $$$$$:   51-block 10
    $$$$$:   51-block 11
    $$$$$:   51-block 12
call   30 never executed
    $$$$$:   51-block 13
    $$$$$:   51-block 14
    $$$$$:   51-block 15
    $$$$$:   51-block 16
call   31 never executed
    $$$$$:   51-block 17
    $$$$$:   51-block 18
call   32 never executed
    $$$$$:   51-block 19
    $$$$$:   51-block 20
call   33 never executed
    $$$$$:   51-block 21
    $$$$$:   51-block 22
    $$$$$:   51-block 23
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   51-block 24
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   51-block 25
call   41 never executed
    $$$$$:   51-block 26
call   42 never executed
        1:   52:}
        1:   52-block  0
        -:   53:
        -:   54:
function _ZL20C_A_T_C_H_T_E_S_T_16v called 1 returned 100% blocks executed 40%
        1:   55:TEST_CASE ("mirrorEnds") {
        1:   56:    REQUIRE("ab" == mirrorEnds("abXYZba"));
        1:   56-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   56-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   56-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   56-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   56-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   56-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   56-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
        1:   56-block  7
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:   56-block  8
call   29 returned 1
    $$$$$:   56-block  9
    $$$$$:   56-block 10
    $$$$$:   56-block 11
    $$$$$:   56-block 12
call   30 never executed
    $$$$$:   56-block 13
    $$$$$:   56-block 14
    $$$$$:   56-block 15
    $$$$$:   56-block 16
call   31 never executed
    $$$$$:   56-block 17
    $$$$$:   56-block 18
call   32 never executed
    $$$$$:   56-block 19
    $$$$$:   56-block 20
call   33 never executed
    $$$$$:   56-block 21
    $$$$$:   56-block 22
    $$$$$:   56-block 23
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   56-block 24
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   56-block 25
call   41 never executed
    $$$$$:   56-block 26
call   42 never executed
        1:   57:    REQUIRE("aasdsaa" == mirrorEnds("aasdsaa"));
        1:   57-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   57-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   57-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   57-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   57-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   57-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   57-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
        1:   57-block  7
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:   57-block  8
call   29 returned 1
    $$$$$:   57-block  9
    $$$$$:   57-block 10
    $$$$$:   57-block 11
    $$$$$:   57-block 12
call   30 never executed
    $$$$$:   57-block 13
    $$$$$:   57-block 14
    $$$$$:   57-block 15
    $$$$$:   57-block 16
call   31 never executed
    $$$$$:   57-block 17
    $$$$$:   57-block 18
call   32 never executed
    $$$$$:   57-block 19
    $$$$$:   57-block 20
call   33 never executed
    $$$$$:   57-block 21
    $$$$$:   57-block 22
    $$$$$:   57-block 23
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   57-block 24
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   57-block 25
call   41 never executed
    $$$$$:   57-block 26
call   42 never executed
        1:   58:}
        1:   58-block  0
        -:   59:
        -:   60:
function _ZL20C_A_T_C_H_T_E_S_T_18v called 1 returned 100% blocks executed 40%
        1:   61:TEST_CASE ("starOut") {
        1:   62:    REQUIRE(starOut("ab*cd") == "ad");
        1:   62-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   62-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   62-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   62-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   62-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   62-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   62-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
        1:   62-block  7
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:   62-block  8
call   29 returned 1
    $$$$$:   62-block  9
    $$$$$:   62-block 10
    $$$$$:   62-block 11
    $$$$$:   62-block 12
call   30 never executed
    $$$$$:   62-block 13
    $$$$$:   62-block 14
    $$$$$:   62-block 15
    $$$$$:   62-block 16
call   31 never executed
    $$$$$:   62-block 17
    $$$$$:   62-block 18
call   32 never executed
    $$$$$:   62-block 19
    $$$$$:   62-block 20
call   33 never executed
    $$$$$:   62-block 21
    $$$$$:   62-block 22
    $$$$$:   62-block 23
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   62-block 24
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   62-block 25
call   41 never executed
    $$$$$:   62-block 26
call   42 never executed
        1:   63:    REQUIRE(starOut("*stringy") == "tringy");
        1:   63-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   63-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   63-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   63-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   63-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   63-block  5
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0 (throw)
        1:   63-block  6
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
        1:   63-block  7
call   26 returned 1
branch 27 taken 1 (fallthrough)
branch 28 taken 0 (throw)
        1:   63-block  8
call   29 returned 1
    $$$$$:   63-block  9
    $$$$$:   63-block 10
    $$$$$:   63-block 11
    $$$$$:   63-block 12
call   30 never executed
    $$$$$:   63-block 13
    $$$$$:   63-block 14
    $$$$$:   63-block 15
    $$$$$:   63-block 16
call   31 never executed
    $$$$$:   63-block 17
    $$$$$:   63-block 18
call   32 never executed
    $$$$$:   63-block 19
    $$$$$:   63-block 20
call   33 never executed
    $$$$$:   63-block 21
    $$$$$:   63-block 22
    $$$$$:   63-block 23
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   63-block 24
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   63-block 25
call   41 never executed
    $$$$$:   63-block 26
call   42 never executed
        1:   64:}
        1:   64-block  0
        -:   65:
        -:   66:
function _ZL20C_A_T_C_H_T_E_S_T_20v called 1 returned 100% blocks executed 39%
        1:   67:TEST_CASE ("GCD") {
        1:   68:    REQUIRE(123 == GCD(123, 0));
        1:   68-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   68-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   68-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   68-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   68-block  4
call   16 returned 1
        1:   68-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   68-block  6
call   20 returned 1
    $$$$$:   68-block  7
    $$$$$:   68-block  8
    $$$$$:   68-block  9
    $$$$$:   68-block 10
call   21 never executed
    $$$$$:   68-block 11
    $$$$$:   68-block 12
    $$$$$:   68-block 13
    $$$$$:   68-block 14
    $$$$$:   68-block 15
    $$$$$:   68-block 16
    $$$$$:   68-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   68-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   68-block 19
call   29 never executed
    $$$$$:   68-block 20
call   30 never executed
        1:   69:    REQUIRE(2 == GCD(22, 32));
        1:   69-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   69-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   69-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   69-block  3
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   69-block  4
call   16 returned 1
        1:   69-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   69-block  6
call   20 returned 1
    $$$$$:   69-block  7
    $$$$$:   69-block  8
    $$$$$:   69-block  9
    $$$$$:   69-block 10
call   21 never executed
    $$$$$:   69-block 11
    $$$$$:   69-block 12
    $$$$$:   69-block 13
    $$$$$:   69-block 14
    $$$$$:   69-block 15
    $$$$$:   69-block 16
    $$$$$:   69-block 17
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    $$$$$:   69-block 18
call   26 never executed
branch 27 never executed
branch 28 never executed
    $$$$$:   69-block 19
call   29 never executed
    $$$$$:   69-block 20
call   30 never executed
        1:   70:}
        1:   70-block  0
        -:   71:
function _ZL20C_A_T_C_H_T_E_S_T_22v called 1 returned 100% blocks executed 40%
        1:   72:TEST_CASE ("Square root") {
        -:   73:    // 4.000000000000 != 4.000000000022 so use Catch2's wrapper class Approx
        1:   74:    REQUIRE(Approx(4.0) == square_root(16.0, 1e-10));
        1:   74-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   74-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   74-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   74-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   74-block  4
call   17 returned 1
        1:   74-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   74-block  6
call   21 returned 1
    $$$$$:   74-block  7
    $$$$$:   74-block  8
    $$$$$:   74-block  9
    $$$$$:   74-block 10
call   22 never executed
    $$$$$:   74-block 11
    $$$$$:   74-block 12
    $$$$$:   74-block 13
    $$$$$:   74-block 14
    $$$$$:   74-block 15
    $$$$$:   74-block 16
    $$$$$:   74-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   74-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   74-block 19
call   30 never executed
    $$$$$:   74-block 20
call   31 never executed
        1:   75:    REQUIRE(Approx(2.0) == square_root(4.0, 1e-10));
        1:   75-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   75-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   75-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   75-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   75-block  4
call   17 returned 1
        1:   75-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   75-block  6
call   21 returned 1
    $$$$$:   75-block  7
    $$$$$:   75-block  8
    $$$$$:   75-block  9
    $$$$$:   75-block 10
call   22 never executed
    $$$$$:   75-block 11
    $$$$$:   75-block 12
    $$$$$:   75-block 13
    $$$$$:   75-block 14
    $$$$$:   75-block 15
    $$$$$:   75-block 16
    $$$$$:   75-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   75-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   75-block 19
call   30 never executed
    $$$$$:   75-block 20
call   31 never executed
        1:   76:    REQUIRE(Approx(111.108) == square_root(12345.0, 1e-10));
        1:   76-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   76-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   76-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   76-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   76-block  4
call   17 returned 1
        1:   76-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   76-block  6
call   21 returned 1
    $$$$$:   76-block  7
    $$$$$:   76-block  8
    $$$$$:   76-block  9
    $$$$$:   76-block 10
call   22 never executed
    $$$$$:   76-block 11
    $$$$$:   76-block 12
    $$$$$:   76-block 13
    $$$$$:   76-block 14
    $$$$$:   76-block 15
    $$$$$:   76-block 16
    $$$$$:   76-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   76-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   76-block 19
call   30 never executed
    $$$$$:   76-block 20
call   31 never executed
        1:   77:    REQUIRE(Approx(3.0) == square_root(9.0, 1e-10));
        1:   77-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   77-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   77-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   77-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   77-block  4
call   17 returned 1
        1:   77-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   77-block  6
call   21 returned 1
    $$$$$:   77-block  7
    $$$$$:   77-block  8
    $$$$$:   77-block  9
    $$$$$:   77-block 10
call   22 never executed
    $$$$$:   77-block 11
    $$$$$:   77-block 12
    $$$$$:   77-block 13
    $$$$$:   77-block 14
    $$$$$:   77-block 15
    $$$$$:   77-block 16
    $$$$$:   77-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   77-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   77-block 19
call   30 never executed
    $$$$$:   77-block 20
call   31 never executed
        1:   78:    REQUIRE(Approx(1.4142135624) == square_root(2.0, 1e-10));
        1:   78-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   78-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   78-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   78-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   78-block  4
call   17 returned 1
        1:   78-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   78-block  6
call   21 returned 1
    $$$$$:   78-block  7
    $$$$$:   78-block  8
    $$$$$:   78-block  9
    $$$$$:   78-block 10
call   22 never executed
    $$$$$:   78-block 11
    $$$$$:   78-block 12
    $$$$$:   78-block 13
    $$$$$:   78-block 14
    $$$$$:   78-block 15
    $$$$$:   78-block 16
    $$$$$:   78-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   78-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   78-block 19
call   30 never executed
    $$$$$:   78-block 20
call   31 never executed
        1:   79:    REQUIRE(Approx(3.45) == square_root(11.9025, 1e-10));
        1:   79-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   79-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   79-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   79-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   79-block  4
call   17 returned 1
        1:   79-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   79-block  6
call   21 returned 1
    $$$$$:   79-block  7
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
call   22 never executed
    $$$$$:   79-block 11
    $$$$$:   79-block 12
    $$$$$:   79-block 13
    $$$$$:   79-block 14
    $$$$$:   79-block 15
    $$$$$:   79-block 16
    $$$$$:   79-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   79-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   79-block 19
call   30 never executed
    $$$$$:   79-block 20
call   31 never executed
        1:   80:    REQUIRE(Approx(3.450001) == square_root(11.9025, 1e-10));
        1:   80-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   80-block  1
call    6 returned 1
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   80-block  2
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   80-block  3
call   14 returned 1
branch 15 taken 1 (fallthrough)
branch 16 taken 0 (throw)
        1:   80-block  4
call   17 returned 1
        1:   80-block  5
call   18 returned 1
branch 19 taken 1 (fallthrough)
branch 20 taken 0 (throw)
        1:   80-block  6
call   21 returned 1
    $$$$$:   80-block  7
    $$$$$:   80-block  8
    $$$$$:   80-block  9
    $$$$$:   80-block 10
call   22 never executed
    $$$$$:   80-block 11
    $$$$$:   80-block 12
    $$$$$:   80-block 13
    $$$$$:   80-block 14
    $$$$$:   80-block 15
    $$$$$:   80-block 16
    $$$$$:   80-block 17
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    $$$$$:   80-block 18
call   27 never executed
branch 28 never executed
branch 29 never executed
    $$$$$:   80-block 19
call   30 never executed
    $$$$$:   80-block 20
call   31 never executed
        1:   81:}
        1:   81-block  0
